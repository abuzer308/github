name: CI Pipeline  # Имя пайплайна, отображается в интерфейсе GitHub Actions.

on:
  push:
    branches:
      - master  # Пайплайн запускается при пуше в основную ветку (main)
  pull_request:
    branches:
      - master  # Пайплайн запускается при открытии pull request'а на main

jobs:
  lint:
    runs-on: ubuntu-latest  # Задача для линтинга будет выполняться на Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Клонируем репозиторий

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Устанавливаем Python версии 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt  # Устанавливаем зависимости

      - name: Run Ruff (Linter)
        run: ruff check .  # Запускаем линтинг с помощью ruff

  test:
    runs-on: ubuntu-latest  # Задача для тестов будет выполняться на Ubuntu
    needs: lint  # Тесты запускаются только после успешного выполнения линтинга

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Клонируем репозиторий

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Устанавливаем Python версии 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt  # Устанавливаем зависимости

      - name: Run Tests
        run: pytest tests/ --junitxml=report.xml  # Запускаем тесты и генерируем отчёт в формате JUnit

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4  # Загружаем отчёты о тестах
        with:
          name: test-reports  # Имя артефакта
          path: report.xml  # Путь к отчёту о тестах
